{"includedArchiveIdentifiers":["swiftrandom.SwiftRandom"],"interfaceLanguages":{"swift":[{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Properties","type":"groupMarker"},{"path":"\/documentation\/swiftrandom\/rng\/description","title":"var description: String","type":"property"},{"title":"Constructor","type":"groupMarker"},{"path":"\/documentation\/swiftrandom\/rng\/init(bg:)","title":"init(bg: BitGenerator)","type":"init"},{"title":"Methods","type":"groupMarker"},{"path":"\/documentation\/swiftrandom\/rng\/randombit()","title":"func randomBit() -> Bool","type":"method"},{"path":"\/documentation\/swiftrandom\/rng\/randomfloat(in:)","title":"func randomFloat(in: Range<Double>) -> Double","type":"method"},{"path":"\/documentation\/swiftrandom\/rng\/getstate()","title":"func getState() -> Bytes","type":"method"},{"path":"\/documentation\/swiftrandom\/rng\/setstate(state:)","title":"func setState(state: Bytes)","type":"method"},{"title":"Open range","type":"groupMarker"},{"path":"\/documentation\/swiftrandom\/rng\/randomint(in:)-8y1hy","title":"func randomInt(in: Range<Int>) -> Int","type":"method"},{"path":"\/documentation\/swiftrandom\/rng\/randomint(in:)-1ug2q","title":"func randomInt(in: Range<Int32>) -> Int32","type":"method"},{"path":"\/documentation\/swiftrandom\/rng\/randomint(in:)-4tmq0","title":"func randomInt(in: Range<Int64>) -> Int64","type":"method"},{"path":"\/documentation\/swiftrandom\/rng\/randomint(in:)-3adg7","title":"func randomInt(in: Range<Int128>) -> Int128","type":"method"},{"path":"\/documentation\/swiftrandom\/rng\/randomuint(in:)-2sjl8","title":"func randomUInt(in: Range<UInt>) -> UInt","type":"method"},{"path":"\/documentation\/swiftrandom\/rng\/randomuint(in:)-21cbi","title":"func randomUInt(in: Range<UInt32>) -> UInt32","type":"method"},{"path":"\/documentation\/swiftrandom\/rng\/randomuint(in:)-951fa","title":"func randomUInt(in: Range<UInt64>) -> UInt64","type":"method"},{"path":"\/documentation\/swiftrandom\/rng\/randomuint(in:)-4lfl5","title":"func randomUInt(in: Range<UInt128>) -> UInt128","type":"method"},{"title":"Closed range","type":"groupMarker"},{"path":"\/documentation\/swiftrandom\/rng\/randomint(in:)-3yfbi","title":"func randomInt(in: ClosedRange<Int>) -> Int","type":"method"},{"path":"\/documentation\/swiftrandom\/rng\/randomint(in:)-3sq9o","title":"func randomInt(in: ClosedRange<Int32>) -> Int32","type":"method"},{"path":"\/documentation\/swiftrandom\/rng\/randomint(in:)-52ntn","title":"func randomInt(in: ClosedRange<Int64>) -> Int64","type":"method"},{"path":"\/documentation\/swiftrandom\/rng\/randomint(in:)-8faww","title":"func randomInt(in: ClosedRange<Int128>) -> Int128","type":"method"},{"path":"\/documentation\/swiftrandom\/rng\/randomuint(in:)-6cd56","title":"func randomUInt(in: ClosedRange<UInt>) -> UInt","type":"method"},{"path":"\/documentation\/swiftrandom\/rng\/randomuint(in:)-504a7","title":"func randomUInt(in: ClosedRange<UInt32>) -> UInt32","type":"method"},{"path":"\/documentation\/swiftrandom\/rng\/randomuint(in:)-13u8b","title":"func randomUInt(in: ClosedRange<UInt64>) -> UInt64","type":"method"},{"path":"\/documentation\/swiftrandom\/rng\/randomuint(in:)-2yf6x","title":"func randomUInt(in: ClosedRange<UInt128>) -> UInt128","type":"method"},{"title":"Distributions","type":"groupMarker"},{"path":"\/documentation\/swiftrandom\/rng\/uniformdistribution(in:values:)","title":"func uniformDistribution(in: Range<Double>, values: inout [Double])","type":"method"},{"path":"\/documentation\/swiftrandom\/rng\/normaldistribution(mean:stdev:values:)","title":"func normalDistribution(mean: Double, stdev: Double, values: inout [Double])","type":"method"},{"path":"\/documentation\/swiftrandom\/rng\/exponentialdistribution(mean:values:)","title":"func exponentialDistribution(mean: Double, values: inout [Double])","type":"method"},{"path":"\/documentation\/swiftrandom\/rng\/meanvalue(of:)","title":"func meanValue(of: [Double]) -> Double","type":"method"},{"path":"\/documentation\/swiftrandom\/rng\/variance(of:)","title":"func variance(of: [Double]) -> Double","type":"method"},{"path":"\/documentation\/swiftrandom\/rng\/standarddeviation(of:)","title":"func standardDeviation(of: [Double]) -> Double","type":"method"}],"path":"\/documentation\/swiftrandom\/rng","title":"RNG","type":"struct"},{"children":[{"title":"Properties","type":"groupMarker"},{"path":"\/documentation\/swiftrandom\/mt32\/description","title":"var description: String","type":"property"},{"title":"Constructors","type":"groupMarker"},{"path":"\/documentation\/swiftrandom\/mt32\/init()","title":"init()","type":"init"},{"path":"\/documentation\/swiftrandom\/mt32\/init(seed:)-5qn0z","title":"init(seed: UInt32)","type":"init"},{"path":"\/documentation\/swiftrandom\/mt32\/init(seed:)-5c7ef","title":"init(seed: [UInt32])","type":"init"},{"title":"Methods","type":"groupMarker"},{"path":"\/documentation\/swiftrandom\/mt32\/next()","title":"func next() -> UInt64","type":"method"},{"path":"\/documentation\/swiftrandom\/mt32\/nextuint32()","title":"func nextUInt32() -> UInt32","type":"method"},{"path":"\/documentation\/swiftrandom\/mt32\/nextuint64()","title":"func nextUInt64() -> UInt64","type":"method"},{"path":"\/documentation\/swiftrandom\/mt32\/nextuint128()","title":"func nextUInt128() -> UInt128","type":"method"},{"path":"\/documentation\/swiftrandom\/mt32\/nextbit()","title":"func nextBit() -> Bool","type":"method"},{"path":"\/documentation\/swiftrandom\/mt32\/getstate()","title":"func getState() -> Bytes","type":"method"},{"path":"\/documentation\/swiftrandom\/mt32\/setstate(state:)","title":"func setState(state: Bytes)","type":"method"},{"path":"\/documentation\/swiftrandom\/mt32\/jump(jumps:)","title":"func jump(jumps: Int)","type":"method"},{"title":"Equality","type":"groupMarker"},{"path":"\/documentation\/swiftrandom\/mt32\/==(_:_:)","title":"static func == (MT32, MT32) -> Bool","type":"op"},{"path":"\/documentation\/swiftrandom\/mt32\/!=(_:_:)","title":"static func != (MT32, MT32) -> Bool","type":"op"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftrandom\/mt32\/!=(_:_:)-89vh0","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftrandom\/mt32\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftrandom\/mt32\/next()-671ur","title":"func next<T>() -> T","type":"method"},{"path":"\/documentation\/swiftrandom\/mt32\/next()-85u05","title":"func next() -> UInt64","type":"method"},{"path":"\/documentation\/swiftrandom\/mt32\/next(upperbound:)","title":"func next<T>(upperBound: T) -> T","type":"method"}],"path":"\/documentation\/swiftrandom\/mt32\/randomnumbergenerator-implementations","title":"RandomNumberGenerator Implementations","type":"symbol"}],"path":"\/documentation\/swiftrandom\/mt32","title":"MT32","type":"struct"},{"children":[{"title":"Properties","type":"groupMarker"},{"path":"\/documentation\/swiftrandom\/mt64\/description","title":"var description: String","type":"property"},{"title":"Constructors","type":"groupMarker"},{"path":"\/documentation\/swiftrandom\/mt64\/init()","title":"init()","type":"init"},{"path":"\/documentation\/swiftrandom\/mt64\/init(seed:)-5rac1","title":"init(seed: UInt64)","type":"init"},{"path":"\/documentation\/swiftrandom\/mt64\/init(seed:)-2c8jp","title":"init(seed: [UInt64])","type":"init"},{"title":"Methods","type":"groupMarker"},{"path":"\/documentation\/swiftrandom\/mt64\/next()","title":"func next() -> UInt64","type":"method"},{"path":"\/documentation\/swiftrandom\/mt64\/nextuint32()","title":"func nextUInt32() -> UInt32","type":"method"},{"path":"\/documentation\/swiftrandom\/mt64\/nextuint64()","title":"func nextUInt64() -> UInt64","type":"method"},{"path":"\/documentation\/swiftrandom\/mt64\/nextuint128()","title":"func nextUInt128() -> UInt128","type":"method"},{"path":"\/documentation\/swiftrandom\/mt64\/nextbit()","title":"func nextBit() -> Bool","type":"method"},{"path":"\/documentation\/swiftrandom\/mt64\/getstate()","title":"func getState() -> Bytes","type":"method"},{"path":"\/documentation\/swiftrandom\/mt64\/setstate(state:)","title":"func setState(state: Bytes)","type":"method"},{"title":"Equality","type":"groupMarker"},{"path":"\/documentation\/swiftrandom\/mt64\/==(_:_:)","title":"static func == (MT64, MT64) -> Bool","type":"op"},{"path":"\/documentation\/swiftrandom\/mt64\/!=(_:_:)","title":"static func != (MT64, MT64) -> Bool","type":"op"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftrandom\/mt64\/!=(_:_:)-8kkov","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftrandom\/mt64\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftrandom\/mt64\/next()-5ov9c","title":"func next<T>() -> T","type":"method"},{"path":"\/documentation\/swiftrandom\/mt64\/next()-8mwze","title":"func next() -> UInt64","type":"method"},{"path":"\/documentation\/swiftrandom\/mt64\/next(upperbound:)","title":"func next<T>(upperBound: T) -> T","type":"method"}],"path":"\/documentation\/swiftrandom\/mt64\/randomnumbergenerator-implementations","title":"RandomNumberGenerator Implementations","type":"symbol"}],"path":"\/documentation\/swiftrandom\/mt64","title":"MT64","type":"struct"},{"children":[{"title":"Constants","type":"groupMarker"},{"path":"\/documentation\/swiftrandom\/pcg32\/multiplier","title":"static let Multiplier: UInt64","type":"property"},{"path":"\/documentation\/swiftrandom\/pcg32\/defaultincrement","title":"static let DefaultIncrement: UInt64","type":"property"},{"title":"Properties","type":"groupMarker"},{"path":"\/documentation\/swiftrandom\/pcg32\/description","title":"var description: String","type":"property"},{"title":"Constructors","type":"groupMarker"},{"path":"\/documentation\/swiftrandom\/pcg32\/init()","title":"init()","type":"init"},{"path":"\/documentation\/swiftrandom\/pcg32\/init(state:increment:)","title":"init(state: UInt64, increment: UInt64)","type":"init"},{"title":"Methods","type":"groupMarker"},{"path":"\/documentation\/swiftrandom\/pcg32\/next()","title":"func next() -> UInt64","type":"method"},{"path":"\/documentation\/swiftrandom\/pcg32\/nextuint32()","title":"func nextUInt32() -> UInt32","type":"method"},{"path":"\/documentation\/swiftrandom\/pcg32\/nextuint64()","title":"func nextUInt64() -> UInt64","type":"method"},{"path":"\/documentation\/swiftrandom\/pcg32\/nextuint128()","title":"func nextUInt128() -> UInt128","type":"method"},{"path":"\/documentation\/swiftrandom\/pcg32\/nextbit()","title":"func nextBit() -> Bool","type":"method"},{"path":"\/documentation\/swiftrandom\/pcg32\/getstate()","title":"func getState() -> Bytes","type":"method"},{"path":"\/documentation\/swiftrandom\/pcg32\/setstate(state:)","title":"func setState(state: Bytes)","type":"method"},{"path":"\/documentation\/swiftrandom\/pcg32\/advance(n:)","title":"func advance(n: UInt64)","type":"method"},{"title":"Equality","type":"groupMarker"},{"path":"\/documentation\/swiftrandom\/pcg32\/==(_:_:)","title":"static func == (PCG32, PCG32) -> Bool","type":"op"},{"path":"\/documentation\/swiftrandom\/pcg32\/!=(_:_:)","title":"static func != (PCG32, PCG32) -> Bool","type":"op"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftrandom\/pcg32\/!=(_:_:)-r3xk","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftrandom\/pcg32\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftrandom\/pcg32\/next()-2i9ow","title":"func next() -> UInt64","type":"method"},{"path":"\/documentation\/swiftrandom\/pcg32\/next()-733qm","title":"func next<T>() -> T","type":"method"},{"path":"\/documentation\/swiftrandom\/pcg32\/next(upperbound:)","title":"func next<T>(upperBound: T) -> T","type":"method"}],"path":"\/documentation\/swiftrandom\/pcg32\/randomnumbergenerator-implementations","title":"RandomNumberGenerator Implementations","type":"symbol"}],"path":"\/documentation\/swiftrandom\/pcg32","title":"PCG32","type":"struct"},{"children":[{"title":"Constants","type":"groupMarker"},{"path":"\/documentation\/swiftrandom\/pcg64\/multiplier","title":"static let Multiplier: UInt128","type":"property"},{"path":"\/documentation\/swiftrandom\/pcg64\/defaultincrement","title":"static let DefaultIncrement: UInt128","type":"property"},{"title":"Properties","type":"groupMarker"},{"path":"\/documentation\/swiftrandom\/pcg64\/description","title":"var description: String","type":"property"},{"title":"Constructors","type":"groupMarker"},{"path":"\/documentation\/swiftrandom\/pcg64\/init()","title":"init()","type":"init"},{"path":"\/documentation\/swiftrandom\/pcg64\/init(state:increment:)","title":"init(state: UInt128, increment: UInt128)","type":"init"},{"title":"Methods","type":"groupMarker"},{"path":"\/documentation\/swiftrandom\/pcg64\/next()","title":"func next() -> UInt64","type":"method"},{"path":"\/documentation\/swiftrandom\/pcg64\/nextuint32()","title":"func nextUInt32() -> UInt32","type":"method"},{"path":"\/documentation\/swiftrandom\/pcg64\/nextuint64()","title":"func nextUInt64() -> UInt64","type":"method"},{"path":"\/documentation\/swiftrandom\/pcg64\/nextuint128()","title":"func nextUInt128() -> UInt128","type":"method"},{"path":"\/documentation\/swiftrandom\/pcg64\/nextbit()","title":"func nextBit() -> Bool","type":"method"},{"path":"\/documentation\/swiftrandom\/pcg64\/getstate()","title":"func getState() -> Bytes","type":"method"},{"path":"\/documentation\/swiftrandom\/pcg64\/setstate(state:)","title":"func setState(state: Bytes)","type":"method"},{"path":"\/documentation\/swiftrandom\/pcg64\/advance(n:)","title":"func advance(n: UInt128)","type":"method"},{"title":"Equality","type":"groupMarker"},{"path":"\/documentation\/swiftrandom\/pcg64\/==(_:_:)","title":"static func == (PCG64, PCG64) -> Bool","type":"op"},{"path":"\/documentation\/swiftrandom\/pcg64\/!=(_:_:)","title":"static func != (PCG64, PCG64) -> Bool","type":"op"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftrandom\/pcg64\/!=(_:_:)-11tb7","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftrandom\/pcg64\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftrandom\/pcg64\/next()-307cz","title":"func next() -> UInt64","type":"method"},{"path":"\/documentation\/swiftrandom\/pcg64\/next()-6m125","title":"func next<T>() -> T","type":"method"},{"path":"\/documentation\/swiftrandom\/pcg64\/next(upperbound:)","title":"func next<T>(upperBound: T) -> T","type":"method"}],"path":"\/documentation\/swiftrandom\/pcg64\/randomnumbergenerator-implementations","title":"RandomNumberGenerator Implementations","type":"symbol"}],"path":"\/documentation\/swiftrandom\/pcg64","title":"PCG64","type":"struct"},{"title":"Protocols","type":"groupMarker"},{"children":[{"title":"Methods","type":"groupMarker"},{"path":"\/documentation\/swiftrandom\/bitgenerator\/nextuint32()","title":"func nextUInt32() -> UInt32","type":"method"},{"path":"\/documentation\/swiftrandom\/bitgenerator\/nextuint64()","title":"func nextUInt64() -> UInt64","type":"method"},{"path":"\/documentation\/swiftrandom\/bitgenerator\/nextuint128()","title":"func nextUInt128() -> UInt128","type":"method"},{"path":"\/documentation\/swiftrandom\/bitgenerator\/nextbit()","title":"func nextBit() -> Bool","type":"method"},{"path":"\/documentation\/swiftrandom\/bitgenerator\/getstate()","title":"func getState() -> Bytes","type":"method"},{"path":"\/documentation\/swiftrandom\/bitgenerator\/setstate(state:)","title":"func setState(state: Bytes)","type":"method"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftrandom\/bitgenerator\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/swiftrandom\/bitgenerator","title":"BitGenerator","type":"protocol"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/swiftrandom\/byte","title":"Byte","type":"typealias"},{"path":"\/documentation\/swiftrandom\/bytes","title":"Bytes","type":"typealias"},{"title":"Additional Information","type":"groupMarker"},{"path":"\/documentation\/swiftrandom\/performance","title":"Performance","type":"article"},{"path":"\/documentation\/swiftrandom\/references","title":"References","type":"article"}],"path":"\/documentation\/swiftrandom","title":"SwiftRandom","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":2}}