{"sections":[],"abstract":[{"text":"Random Number Generation","type":"text"}],"topicSections":[{"title":"Classes","identifiers":["doc:\/\/swiftrandom.SwiftRandom\/documentation\/SwiftRandom\/RNG","doc:\/\/swiftrandom.SwiftRandom\/documentation\/SwiftRandom\/MT32","doc:\/\/swiftrandom.SwiftRandom\/documentation\/SwiftRandom\/MT64","doc:\/\/swiftrandom.SwiftRandom\/documentation\/SwiftRandom\/PCG32","doc:\/\/swiftrandom.SwiftRandom\/documentation\/SwiftRandom\/PCG64"],"anchor":"Classes"},{"title":"Protocols","identifiers":["doc:\/\/swiftrandom.SwiftRandom\/documentation\/SwiftRandom\/BitGenerator"],"anchor":"Protocols"},{"title":"Type Aliases","identifiers":["doc:\/\/swiftrandom.SwiftRandom\/documentation\/SwiftRandom\/Byte","doc:\/\/swiftrandom.SwiftRandom\/documentation\/SwiftRandom\/Bytes"],"anchor":"Type-Aliases"},{"title":"Additional Information","identifiers":["doc:\/\/swiftrandom.SwiftRandom\/documentation\/SwiftRandom\/Performance","doc:\/\/swiftrandom.SwiftRandom\/documentation\/SwiftRandom\/References"],"anchor":"Additional-Information"}],"schemaVersion":{"minor":3,"patch":0,"major":0},"primaryContentSections":[{"kind":"content","content":[{"type":"heading","level":2,"anchor":"Overview","text":"Overview"},{"type":"paragraph","inlineContent":[{"text":"The SwiftRandom package generates various types of random numbers using the Mersenne Twister algorithm","type":"text"},{"text":" ","type":"text"},{"text":"or the Permuted Congruential Generator algorithm.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"It generates the following:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Random floating point values in a specified open range"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Random integers in a specified open or closed range","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Random unsigned integers in a specified open or closed range"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Random bits","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"A uniform distribution in a specified open range","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A normal distribution with specified mean and deviation"}]}]},{"content":[{"inlineContent":[{"text":"An exponential distribution with specified mean","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Mean value, variance and standard deviation of a set of values"}]}]}]},{"type":"paragraph","inlineContent":[{"text":"Random number generation uses a ","type":"text"},{"isActive":true,"identifier":"doc:\/\/swiftrandom.SwiftRandom\/documentation\/SwiftRandom\/BitGenerator","type":"reference"},{"text":" which is one of ","type":"text"},{"isActive":true,"identifier":"doc:\/\/swiftrandom.SwiftRandom\/documentation\/SwiftRandom\/MT32","type":"reference"},{"text":", ","type":"text"},{"isActive":true,"identifier":"doc:\/\/swiftrandom.SwiftRandom\/documentation\/SwiftRandom\/MT64","type":"reference"},{"text":", ","type":"text"},{"isActive":true,"identifier":"doc:\/\/swiftrandom.SwiftRandom\/documentation\/SwiftRandom\/PCG32","type":"reference"},{"text":" or ","type":"text"},{"isActive":true,"identifier":"doc:\/\/swiftrandom.SwiftRandom\/documentation\/SwiftRandom\/PCG64","type":"reference"},{"text":".","type":"text"}]},{"type":"aside","style":"important","name":"Important","content":[{"inlineContent":[{"type":"text","text":""},{"type":"text","text":" "},{"type":"text","text":"SwiftRandom is not suitable for cryptographic applications."}],"type":"paragraph"}]},{"type":"heading","level":3,"anchor":"Example-1","text":"Example 1"},{"type":"codeListing","syntax":"swift","code":["import SwiftRandom","","\/\/ Create the BitGenerator to use, f.ex. PCG32 based on initial state = 1234","let pcg32 = PCG32(state: 1234)","","\/\/ Create the RNG instance","let rng = RNG(bg: pcg32)","","\/\/ Create 1000 normal distributed values with mean 2.0 and standard deviation 1.3","var x = [Double](repeating: 0.0, count: 1000)","rng.normalDistribution(mean: 2.0, stdev: 1.3, values: &x)","","\/\/ See the actual mean and standard deviation","print(\"mean:  \", rng.meanValue(of: x))","print(\"stdDev:\", rng.standardDeviation(of: x))"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"giving:"}]},{"type":"codeListing","syntax":"swift","code":["mean:   1.9523520613523375","stdDev: 1.2654344086187834"]},{"type":"heading","level":3,"anchor":"Example-2","text":"Example 2"},{"code":["import SwiftRandom","","\/\/ Simulate 1000 dice rolls","","let rng = RNG(bg: PCG64())","var counts = [Int](repeating: 0, count: 6)","","for _ in 0 ..< 1000 {","    let dice = rng.randomInt(in: 1 ... 6)","    counts[dice - 1] += 1","}","","print(counts)"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"text":"giving (for example):","type":"text"}]},{"code":["[152, 163, 166, 176, 191, 152]"],"type":"codeListing","syntax":"swift"},{"level":3,"anchor":"Usage","type":"heading","text":"Usage"},{"type":"paragraph","inlineContent":[{"type":"text","text":"To use SwiftRandom, in your project Package.swift file add a dependency like"}]},{"code":["dependencies: [","  package(url: \"https:\/\/github.com\/leif-ibsen\/SwiftRandom\", from: \"2.0.0\"),","]"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"SwiftRandom itself does not depend on other packages."}]},{"name":"Important","type":"aside","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"type":"text","text":" "},{"type":"text","text":"SwiftRandom requires Swift 6.0. It also requires that the "},{"code":"Int","type":"codeVoice"},{"type":"text","text":" and "},{"code":"UInt","type":"codeVoice"},{"type":"text","text":" types be 64 bit types."}]},{"type":"paragraph","inlineContent":[{"text":"SwiftRandom uses the ","type":"text"},{"code":"Int128","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"UInt128","type":"codeVoice"},{"text":" types. Therefore, for ","type":"text"},{"code":"macOS","type":"codeVoice"},{"text":" the version must be at least 15,","type":"text"},{"text":" ","type":"text"},{"text":"for ","type":"text"},{"code":"iOS","type":"codeVoice"},{"text":" the version must be at least 18, and for ","type":"text"},{"code":"watchOS","type":"codeVoice"},{"text":" the version must be at least 11.","type":"text"}]}],"style":"important"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/swiftrandom.SwiftRandom\/documentation\/SwiftRandom"},"kind":"symbol","metadata":{"modules":[{"name":"SwiftRandom"}],"title":"SwiftRandom","externalID":"SwiftRandom","symbolKind":"module","role":"collection","roleHeading":"Framework"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftrandom"]}],"hierarchy":{"paths":[[]]},"references":{"doc://swiftrandom.SwiftRandom/documentation/SwiftRandom/RNG":{"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"RNG"}],"type":"topic","role":"symbol","title":"RNG","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"RNG"}],"url":"\/documentation\/swiftrandom\/rng","identifier":"doc:\/\/swiftrandom.SwiftRandom\/documentation\/SwiftRandom\/RNG","abstract":[{"type":"text","text":"The Random Number Generator"}]},"doc://swiftrandom.SwiftRandom/documentation/SwiftRandom/Byte":{"identifier":"doc:\/\/swiftrandom.SwiftRandom\/documentation\/SwiftRandom\/Byte","navigatorTitle":[{"text":"Byte","kind":"identifier"}],"kind":"symbol","abstract":[{"text":"Unsigned 8 bit value","type":"text"}],"fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Byte","kind":"identifier"}],"type":"topic","role":"symbol","title":"Byte","url":"\/documentation\/swiftrandom\/byte"},"doc://swiftrandom.SwiftRandom/documentation/SwiftRandom/PCG32":{"navigatorTitle":[{"kind":"identifier","text":"PCG32"}],"type":"topic","role":"symbol","abstract":[{"type":"text","text":"The 32 bit Permuted Congruential Generator: PCG-XSH-RR"}],"identifier":"doc:\/\/swiftrandom.SwiftRandom\/documentation\/SwiftRandom\/PCG32","url":"\/documentation\/swiftrandom\/pcg32","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"PCG32"}],"kind":"symbol","title":"PCG32"},"doc://swiftrandom.SwiftRandom/documentation/SwiftRandom/References":{"kind":"article","role":"article","url":"\/documentation\/swiftrandom\/references","abstract":[],"type":"topic","identifier":"doc:\/\/swiftrandom.SwiftRandom\/documentation\/SwiftRandom\/References","title":"References"},"doc://swiftrandom.SwiftRandom/documentation/SwiftRandom":{"title":"SwiftRandom","kind":"symbol","abstract":[{"type":"text","text":"Random Number Generation"}],"type":"topic","identifier":"doc:\/\/swiftrandom.SwiftRandom\/documentation\/SwiftRandom","url":"\/documentation\/swiftrandom","role":"collection"},"doc://swiftrandom.SwiftRandom/documentation/SwiftRandom/BitGenerator":{"identifier":"doc:\/\/swiftrandom.SwiftRandom\/documentation\/SwiftRandom\/BitGenerator","abstract":[{"text":"The bit generator protocol that the RNG class requires","type":"text"}],"kind":"symbol","role":"symbol","title":"BitGenerator","type":"topic","url":"\/documentation\/swiftrandom\/bitgenerator","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BitGenerator","kind":"identifier"}],"navigatorTitle":[{"text":"BitGenerator","kind":"identifier"}]},"doc://swiftrandom.SwiftRandom/documentation/SwiftRandom/PCG64":{"abstract":[{"type":"text","text":"The 64 bit Permuted Congruential Generator: PCG-XSL-RR"}],"role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"PCG64"}],"navigatorTitle":[{"kind":"identifier","text":"PCG64"}],"title":"PCG64","url":"\/documentation\/swiftrandom\/pcg64","kind":"symbol","type":"topic","identifier":"doc:\/\/swiftrandom.SwiftRandom\/documentation\/SwiftRandom\/PCG64"},"doc://swiftrandom.SwiftRandom/documentation/SwiftRandom/Performance":{"kind":"article","title":"Performance","identifier":"doc:\/\/swiftrandom.SwiftRandom\/documentation\/SwiftRandom\/Performance","abstract":[],"url":"\/documentation\/swiftrandom\/performance","type":"topic","role":"article"},"doc://swiftrandom.SwiftRandom/documentation/SwiftRandom/Bytes":{"type":"topic","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Bytes","kind":"identifier"}],"abstract":[{"text":"Array of unsigned 8 bit values","type":"text"}],"kind":"symbol","title":"Bytes","identifier":"doc:\/\/swiftrandom.SwiftRandom\/documentation\/SwiftRandom\/Bytes","navigatorTitle":[{"text":"Bytes","kind":"identifier"}],"role":"symbol","url":"\/documentation\/swiftrandom\/bytes"},"doc://swiftrandom.SwiftRandom/documentation/SwiftRandom/MT32":{"navigatorTitle":[{"text":"MT32","kind":"identifier"}],"title":"MT32","url":"\/documentation\/swiftrandom\/mt32","role":"symbol","type":"topic","kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MT32","kind":"identifier"}],"identifier":"doc:\/\/swiftrandom.SwiftRandom\/documentation\/SwiftRandom\/MT32","abstract":[{"type":"text","text":"The 32 bit Mersenne Twister"}]},"doc://swiftrandom.SwiftRandom/documentation/SwiftRandom/MT64":{"role":"symbol","identifier":"doc:\/\/swiftrandom.SwiftRandom\/documentation\/SwiftRandom\/MT64","abstract":[{"text":"The 64 bit Mersenne Twister","type":"text"}],"type":"topic","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MT64","kind":"identifier"}],"navigatorTitle":[{"text":"MT64","kind":"identifier"}],"url":"\/documentation\/swiftrandom\/mt64","kind":"symbol","title":"MT64"}}}