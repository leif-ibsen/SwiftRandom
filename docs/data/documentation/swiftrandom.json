{"primaryContentSections":[{"content":[{"level":2,"anchor":"Overview","text":"Overview","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The SwiftRandom package generates various types of random numbers using the Mersenne Twister algorithm"},{"type":"text","text":" "},{"type":"text","text":"or the Permuted Congruential Generator algorithm."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"It generates the following:"}]},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"Random floating point values in a specified open or closed range"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Random integers in a specified open or closed range"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Random unsigned integers in a specified open or closed range"}]}]},{"content":[{"inlineContent":[{"text":"Random bits","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"A uniform distribution in a specified open or closed range"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A normal distribution with specified mean and deviation"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"An exponential distribution with specified mean"}],"type":"paragraph"}]}],"type":"unorderedList"},{"inlineContent":[{"text":"Random number generation uses a ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftRandom\/documentation\/SwiftRandom\/BitGenerator"},{"text":" which is one of ","type":"text"},{"type":"reference","identifier":"doc:\/\/SwiftRandom\/documentation\/SwiftRandom\/MT32","isActive":true},{"type":"text","text":", "},{"identifier":"doc:\/\/SwiftRandom\/documentation\/SwiftRandom\/MT64","isActive":true,"type":"reference"},{"type":"text","text":", "},{"identifier":"doc:\/\/SwiftRandom\/documentation\/SwiftRandom\/PCG32","type":"reference","isActive":true},{"text":" or ","type":"text"},{"identifier":"doc:\/\/SwiftRandom\/documentation\/SwiftRandom\/PCG64","type":"reference","isActive":true},{"type":"text","text":"."}],"type":"paragraph"},{"type":"aside","name":"Important","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"type":"text","text":" "},{"text":"SwiftRandom is not suitable for cryptographic applications.","type":"text"}]}],"style":"important"},{"level":3,"text":"Example 1","type":"heading","anchor":"Example-1"},{"code":["import SwiftRandom","","\/\/ Create the BitGenerator to use, f.ex. PCG32 based on initial state = 1234","let pcg32 = PCG32(state: 1234)","","\/\/ Create the RNG instance","let rng = RNG(bg: pcg32)","","\/\/ Create 20 normal distributed values with mean 2.0 and standard deviation 1.3","var x = [Double](repeating: 0.0, count: 20)","rng.normalDistribution(mean: 2.0, stdev: 1.3, values: &x)","","print(x)"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"text":"giving:","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["[2.1734545110811996, 1.335732163289224, 0.941024900396149, 3.2264230814632975, 5.459014841733499,","1.800905802727681, 1.8800986950394902, 4.590683327055603, 1.0172035621489117, 2.9474413989338397,","0.6246918556470995, 2.851867736518513, 2.753185266377434, -0.3036907536413542, 2.5184316925825057,","2.8841595259841846, 0.6693799134497671, 1.94079213687274, 1.3378909025908157, 2.564141001379788]"]},{"type":"heading","text":"Example 2","level":3,"anchor":"Example-2"},{"syntax":"swift","type":"codeListing","code":["import SwiftRandom","","\/\/ Simulate 1000 dice rolls","","let rng = RNG(bg: PCG64())","var counts = [Int](repeating: 0, count: 6)","","for _ in 0 ..< 1000 {","    let dice = rng.randomInt(in: 1 ... 6)","    counts[dice - 1] += 1","}","","print(counts)",""]},{"type":"paragraph","inlineContent":[{"type":"text","text":"giving (for example):"}]},{"code":["[152, 163, 166, 176, 191, 152]"],"type":"codeListing","syntax":"swift"},{"text":"Usage","anchor":"Usage","type":"heading","level":3},{"inlineContent":[{"text":"To use SwiftRandom, in your project Package.swift file add a dependency like","type":"text"}],"type":"paragraph"},{"code":["dependencies: [","  package(url: \"https:\/\/github.com\/leif-ibsen\/SwiftRandom\", from: \"1.0.0\"),","]"],"syntax":"swift","type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"SwiftRandom itself does not depend on other packages."}]},{"type":"aside","content":[{"inlineContent":[{"type":"text","text":""},{"text":" ","type":"text"},{"text":"SwiftRandom requires Swift 5.0. It also requires that the ","type":"text"},{"code":"Int","type":"codeVoice"},{"type":"text","text":" and "},{"type":"codeVoice","code":"UInt"},{"text":" types be 64 bit types.","type":"text"}],"type":"paragraph"}],"style":"important","name":"Important"}],"kind":"content"}],"kind":"symbol","abstract":[{"type":"text","text":"Random Number Generation"}],"topicSections":[{"title":"Classes","anchor":"Classes","identifiers":["doc:\/\/SwiftRandom\/documentation\/SwiftRandom\/RNG","doc:\/\/SwiftRandom\/documentation\/SwiftRandom\/MT32","doc:\/\/SwiftRandom\/documentation\/SwiftRandom\/MT64","doc:\/\/SwiftRandom\/documentation\/SwiftRandom\/PCG32","doc:\/\/SwiftRandom\/documentation\/SwiftRandom\/PCG64"]},{"identifiers":["doc:\/\/SwiftRandom\/documentation\/SwiftRandom\/BitGenerator"],"title":"Protocols","anchor":"Protocols"},{"title":"Type Aliases","identifiers":["doc:\/\/SwiftRandom\/documentation\/SwiftRandom\/Byte","doc:\/\/SwiftRandom\/documentation\/SwiftRandom\/Bytes","doc:\/\/SwiftRandom\/documentation\/SwiftRandom\/UInt128"],"anchor":"Type-Aliases"},{"title":"Additional Information","identifiers":["doc:\/\/SwiftRandom\/documentation\/SwiftRandom\/Performance","doc:\/\/SwiftRandom\/documentation\/SwiftRandom\/References"],"anchor":"Additional-Information"}],"hierarchy":{"paths":[[]]},"sections":[],"identifier":{"url":"doc:\/\/SwiftRandom\/documentation\/SwiftRandom","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftrandom"]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"metadata":{"roleHeading":"Framework","symbolKind":"module","title":"SwiftRandom","modules":[{"name":"SwiftRandom"}],"role":"collection","externalID":"SwiftRandom"},"references":{"doc://SwiftRandom/documentation/SwiftRandom/BitGenerator":{"kind":"symbol","title":"BitGenerator","abstract":[{"text":"The bit generator protocol that the RNG class requires","type":"text"}],"navigatorTitle":[{"text":"BitGenerator","kind":"identifier"}],"identifier":"doc:\/\/SwiftRandom\/documentation\/SwiftRandom\/BitGenerator","url":"\/documentation\/swiftrandom\/bitgenerator","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BitGenerator","kind":"identifier"}],"role":"symbol","type":"topic"},"doc://SwiftRandom/documentation/SwiftRandom/MT32":{"navigatorTitle":[{"text":"MT32","kind":"identifier"}],"type":"topic","title":"MT32","abstract":[{"type":"text","text":"The 32 bit Mersenne Twister"}],"role":"symbol","identifier":"doc:\/\/SwiftRandom\/documentation\/SwiftRandom\/MT32","url":"\/documentation\/swiftrandom\/mt32","kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"MT32"}]},"doc://SwiftRandom/documentation/SwiftRandom/RNG":{"navigatorTitle":[{"text":"RNG","kind":"identifier"}],"abstract":[{"text":"The Random Number Generator","type":"text"}],"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"RNG","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/SwiftRandom\/documentation\/SwiftRandom\/RNG","kind":"symbol","role":"symbol","url":"\/documentation\/swiftrandom\/rng","title":"RNG"},"doc://SwiftRandom/documentation/SwiftRandom/Byte":{"navigatorTitle":[{"text":"Byte","kind":"identifier"}],"identifier":"doc:\/\/SwiftRandom\/documentation\/SwiftRandom\/Byte","abstract":[{"type":"text","text":"Unsigned 8 bit value"}],"title":"Byte","url":"\/documentation\/swiftrandom\/byte","role":"symbol","fragments":[{"kind":"keyword","text":"typealias"},{"text":" ","kind":"text"},{"text":"Byte","kind":"identifier"}],"kind":"symbol","type":"topic"},"doc://SwiftRandom/documentation/SwiftRandom/PCG64":{"navigatorTitle":[{"text":"PCG64","kind":"identifier"}],"kind":"symbol","title":"PCG64","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"PCG64","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"The 64 bit Permuted Congruential Generator: PCG-XSL-RR"}],"url":"\/documentation\/swiftrandom\/pcg64","identifier":"doc:\/\/SwiftRandom\/documentation\/SwiftRandom\/PCG64"},"doc://SwiftRandom/documentation/SwiftRandom/UInt128":{"title":"UInt128","role":"symbol","type":"topic","identifier":"doc:\/\/SwiftRandom\/documentation\/SwiftRandom\/UInt128","abstract":[{"text":"128 bit unsigned integer","type":"text"}],"fragments":[{"kind":"keyword","text":"typealias"},{"text":" ","kind":"text"},{"kind":"identifier","text":"UInt128"}],"kind":"symbol","url":"\/documentation\/swiftrandom\/uint128","navigatorTitle":[{"text":"UInt128","kind":"identifier"}]},"doc://SwiftRandom/documentation/SwiftRandom":{"title":"SwiftRandom","role":"collection","kind":"symbol","type":"topic","url":"\/documentation\/swiftrandom","identifier":"doc:\/\/SwiftRandom\/documentation\/SwiftRandom","abstract":[{"text":"Random Number Generation","type":"text"}]},"doc://SwiftRandom/documentation/SwiftRandom/MT64":{"kind":"symbol","title":"MT64","abstract":[{"text":"The 64 bit Mersenne Twister","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"MT64"}],"identifier":"doc:\/\/SwiftRandom\/documentation\/SwiftRandom\/MT64","url":"\/documentation\/swiftrandom\/mt64","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MT64","kind":"identifier"}],"role":"symbol","type":"topic"},"doc://SwiftRandom/documentation/SwiftRandom/PCG32":{"type":"topic","kind":"symbol","identifier":"doc:\/\/SwiftRandom\/documentation\/SwiftRandom\/PCG32","title":"PCG32","url":"\/documentation\/swiftrandom\/pcg32","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"PCG32","kind":"identifier"}],"abstract":[{"text":"The 32 bit Permuted Congruential Generator: PCG-XSH-RR","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"PCG32"}],"role":"symbol"},"doc://SwiftRandom/documentation/SwiftRandom/Performance":{"identifier":"doc:\/\/SwiftRandom\/documentation\/SwiftRandom\/Performance","abstract":[],"url":"\/documentation\/swiftrandom\/performance","kind":"article","role":"article","type":"topic","title":"Performance"},"doc://SwiftRandom/documentation/SwiftRandom/References":{"abstract":[],"title":"References","type":"topic","identifier":"doc:\/\/SwiftRandom\/documentation\/SwiftRandom\/References","url":"\/documentation\/swiftrandom\/references","kind":"article","role":"article"},"doc://SwiftRandom/documentation/SwiftRandom/Bytes":{"kind":"symbol","fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"text":"Bytes","kind":"identifier"}],"url":"\/documentation\/swiftrandom\/bytes","abstract":[{"type":"text","text":"Array of unsigned 8 bit values"}],"role":"symbol","identifier":"doc:\/\/SwiftRandom\/documentation\/SwiftRandom\/Bytes","type":"topic","title":"Bytes","navigatorTitle":[{"kind":"identifier","text":"Bytes"}]}}}