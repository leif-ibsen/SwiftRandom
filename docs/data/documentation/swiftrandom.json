{"abstract":[{"text":"Random Number Generation","type":"text"}],"topicSections":[{"anchor":"Classes","identifiers":["doc:\/\/SwiftRandom\/documentation\/SwiftRandom\/RNG","doc:\/\/SwiftRandom\/documentation\/SwiftRandom\/MT32","doc:\/\/SwiftRandom\/documentation\/SwiftRandom\/MT64","doc:\/\/SwiftRandom\/documentation\/SwiftRandom\/PCG32","doc:\/\/SwiftRandom\/documentation\/SwiftRandom\/PCG64"],"title":"Classes"},{"anchor":"Protocols","identifiers":["doc:\/\/SwiftRandom\/documentation\/SwiftRandom\/BitGenerator"],"title":"Protocols"},{"anchor":"Type-Aliases","identifiers":["doc:\/\/SwiftRandom\/documentation\/SwiftRandom\/Byte","doc:\/\/SwiftRandom\/documentation\/SwiftRandom\/Bytes"],"title":"Type Aliases"},{"anchor":"Additional-Information","identifiers":["doc:\/\/SwiftRandom\/documentation\/SwiftRandom\/Performance","doc:\/\/SwiftRandom\/documentation\/SwiftRandom\/References"],"title":"Additional Information"}],"sections":[],"schemaVersion":{"major":0,"patch":0,"minor":3},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SwiftRandom\/documentation\/SwiftRandom"},"variants":[{"paths":["\/documentation\/swiftrandom"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"content":[{"text":"Overview","type":"heading","level":2,"anchor":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The SwiftRandom package generates various types of random numbers using the Mersenne Twister algorithm"},{"type":"text","text":" "},{"type":"text","text":"or the Permuted Congruential Generator algorithm."}]},{"type":"paragraph","inlineContent":[{"text":"It generates the following:","type":"text"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Random floating point values in a specified open range","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"Random integers in a specified open or closed range","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Random unsigned integers in a specified open or closed range"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Random bits"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"A uniform distribution in a specified open range"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"A normal distribution with specified mean and deviation"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"An exponential distribution with specified mean","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Mean value, variance and standard deviation of a set of values"}]}]}],"type":"unorderedList"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Random number generation uses a "},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftRandom\/documentation\/SwiftRandom\/BitGenerator"},{"type":"text","text":" which is one of "},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftRandom\/documentation\/SwiftRandom\/MT32"},{"type":"text","text":", "},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftRandom\/documentation\/SwiftRandom\/MT64"},{"type":"text","text":", "},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftRandom\/documentation\/SwiftRandom\/PCG32"},{"type":"text","text":" or "},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftRandom\/documentation\/SwiftRandom\/PCG64"},{"type":"text","text":"."}]},{"type":"aside","name":"Important","style":"important","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"type":"text","text":" "},{"type":"text","text":"SwiftRandom is not suitable for cryptographic applications."}]}]},{"type":"heading","text":"Example 1","anchor":"Example-1","level":3},{"type":"codeListing","syntax":"swift","code":["import SwiftRandom","","\/\/ Create the BitGenerator to use, f.ex. PCG32 based on initial state = 1234","let pcg32 = PCG32(state: 1234)","","\/\/ Create the RNG instance","let rng = RNG(bg: pcg32)","","\/\/ Create 1000 normal distributed values with mean 2.0 and standard deviation 1.3","var x = [Double](repeating: 0.0, count: 1000)","rng.normalDistribution(mean: 2.0, stdev: 1.3, values: &x)","","\/\/ See the actual mean and standard deviation","print(\"mean:  \", rng.meanValue(of: x))","print(\"stdDev:\", rng.standardDeviation(of: x))"]},{"type":"paragraph","inlineContent":[{"text":"giving:","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["mean:   1.9523520613523375","stdDev: 1.2654344086187834"]},{"type":"heading","text":"Example 2","anchor":"Example-2","level":3},{"type":"codeListing","syntax":"swift","code":["import SwiftRandom","","\/\/ Simulate 1000 dice rolls","","let rng = RNG(bg: PCG64())","var counts = [Int](repeating: 0, count: 6)","","for _ in 0 ..< 1000 {","    let dice = rng.randomInt(in: 1 ... 6)","    counts[dice - 1] += 1","}","","print(counts)"]},{"type":"paragraph","inlineContent":[{"text":"giving (for example):","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["[152, 163, 166, 176, 191, 152]"]},{"type":"heading","text":"Usage","anchor":"Usage","level":3},{"type":"paragraph","inlineContent":[{"type":"text","text":"To use SwiftRandom, in your project Package.swift file add a dependency like"}]},{"type":"codeListing","syntax":"swift","code":["dependencies: [","  package(url: \"https:\/\/github.com\/leif-ibsen\/SwiftRandom\", from: \"2.0.0\"),","]"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"SwiftRandom itself does not depend on other packages."}]},{"type":"aside","name":"Important","style":"important","content":[{"inlineContent":[{"text":"","type":"text"},{"text":" ","type":"text"},{"text":"SwiftRandom requires Swift 6.0. It also requires that the ","type":"text"},{"code":"Int","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"UInt","type":"codeVoice"},{"text":" types be 64 bit types.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"SwiftRandom uses the "},{"type":"codeVoice","code":"Int128"},{"type":"text","text":" and "},{"type":"codeVoice","code":"UInt128"},{"type":"text","text":" types. Therefore, for "},{"type":"codeVoice","code":"macOS"},{"type":"text","text":" the version must be at least 15,"},{"type":"text","text":" "},{"type":"text","text":"for "},{"type":"codeVoice","code":"iOS"},{"type":"text","text":" the version must be at least 18, and for "},{"type":"codeVoice","code":"watchOS"},{"type":"text","text":" the version must be at least 11."}],"type":"paragraph"}]}],"kind":"content"}],"metadata":{"modules":[{"name":"SwiftRandom"}],"roleHeading":"Framework","role":"collection","title":"SwiftRandom","externalID":"SwiftRandom","symbolKind":"module"},"hierarchy":{"paths":[[]]},"kind":"symbol","references":{"doc://SwiftRandom/documentation/SwiftRandom/PCG32":{"title":"PCG32","abstract":[{"type":"text","text":"The 32 bit Permuted Congruential Generator: PCG-XSH-RR"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"PCG32"}],"navigatorTitle":[{"text":"PCG32","kind":"identifier"}],"type":"topic","role":"symbol","url":"\/documentation\/swiftrandom\/pcg32","identifier":"doc:\/\/SwiftRandom\/documentation\/SwiftRandom\/PCG32","kind":"symbol"},"doc://SwiftRandom/documentation/SwiftRandom/MT32":{"abstract":[{"text":"The 32 bit Mersenne Twister","type":"text"}],"title":"MT32","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MT32","kind":"identifier"}],"navigatorTitle":[{"text":"MT32","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/SwiftRandom\/documentation\/SwiftRandom\/MT32","kind":"symbol","url":"\/documentation\/swiftrandom\/mt32","type":"topic"},"doc://SwiftRandom/documentation/SwiftRandom/MT64":{"abstract":[{"text":"The 64 bit Mersenne Twister","type":"text"}],"kind":"symbol","identifier":"doc:\/\/SwiftRandom\/documentation\/SwiftRandom\/MT64","url":"\/documentation\/swiftrandom\/mt64","navigatorTitle":[{"kind":"identifier","text":"MT64"}],"type":"topic","title":"MT64","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"MT64"}],"role":"symbol"},"doc://SwiftRandom/documentation/SwiftRandom/Performance":{"url":"\/documentation\/swiftrandom\/performance","role":"article","identifier":"doc:\/\/SwiftRandom\/documentation\/SwiftRandom\/Performance","abstract":[],"title":"Performance","kind":"article","type":"topic"},"doc://SwiftRandom/documentation/SwiftRandom":{"identifier":"doc:\/\/SwiftRandom\/documentation\/SwiftRandom","title":"SwiftRandom","kind":"symbol","type":"topic","role":"collection","abstract":[{"text":"Random Number Generation","type":"text"}],"url":"\/documentation\/swiftrandom"},"doc://SwiftRandom/documentation/SwiftRandom/BitGenerator":{"identifier":"doc:\/\/SwiftRandom\/documentation\/SwiftRandom\/BitGenerator","kind":"symbol","navigatorTitle":[{"text":"BitGenerator","kind":"identifier"}],"url":"\/documentation\/swiftrandom\/bitgenerator","abstract":[{"type":"text","text":"The bit generator protocol that the RNG class requires"}],"title":"BitGenerator","role":"symbol","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BitGenerator","kind":"identifier"}]},"doc://SwiftRandom/documentation/SwiftRandom/Bytes":{"fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"Bytes"}],"title":"Bytes","kind":"symbol","abstract":[{"type":"text","text":"Array of unsigned 8 bit values"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Bytes"}],"identifier":"doc:\/\/SwiftRandom\/documentation\/SwiftRandom\/Bytes","type":"topic","url":"\/documentation\/swiftrandom\/bytes"},"doc://SwiftRandom/documentation/SwiftRandom/References":{"identifier":"doc:\/\/SwiftRandom\/documentation\/SwiftRandom\/References","url":"\/documentation\/swiftrandom\/references","role":"article","type":"topic","abstract":[],"kind":"article","title":"References"},"doc://SwiftRandom/documentation/SwiftRandom/PCG64":{"title":"PCG64","identifier":"doc:\/\/SwiftRandom\/documentation\/SwiftRandom\/PCG64","type":"topic","kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PCG64","kind":"identifier"}],"url":"\/documentation\/swiftrandom\/pcg64","abstract":[{"text":"The 64 bit Permuted Congruential Generator: PCG-XSL-RR","type":"text"}],"navigatorTitle":[{"text":"PCG64","kind":"identifier"}],"role":"symbol"},"doc://SwiftRandom/documentation/SwiftRandom/Byte":{"identifier":"doc:\/\/SwiftRandom\/documentation\/SwiftRandom\/Byte","url":"\/documentation\/swiftrandom\/byte","abstract":[{"text":"Unsigned 8 bit value","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"Byte"}],"type":"topic","title":"Byte","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"Byte"}]},"doc://SwiftRandom/documentation/SwiftRandom/RNG":{"url":"\/documentation\/swiftrandom\/rng","type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"RNG"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"RNG"}],"identifier":"doc:\/\/SwiftRandom\/documentation\/SwiftRandom\/RNG","abstract":[{"type":"text","text":"The Random Number Generator"}],"title":"RNG","kind":"symbol"}}}