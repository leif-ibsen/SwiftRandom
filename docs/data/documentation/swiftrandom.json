{"primaryContentSections":[{"kind":"content","content":[{"level":2,"text":"Overview","type":"heading","anchor":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The SwiftRandom package generates various types of random numbers using the Mersenne Twister algorithm"},{"type":"text","text":" "},{"type":"text","text":"or the Permuted Congruential Generator algorithm."}]},{"type":"paragraph","inlineContent":[{"text":"It generates the following:","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"Random floating point values in a specified open range","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Random integers in a specified open or closed range","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Random unsigned integers in a specified open or closed range","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Random bits"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"A uniform distribution in a specified open range","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A normal distribution with specified mean and deviation"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"An exponential distribution with specified mean"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Mean value, variance and standard deviation of a set of values"}]}]}]},{"type":"paragraph","inlineContent":[{"text":"Random number generation uses a ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftRandom\/documentation\/SwiftRandom\/BitGenerator"},{"text":" which is one of ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftRandom\/documentation\/SwiftRandom\/MT32"},{"text":", ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftRandom\/documentation\/SwiftRandom\/MT64"},{"text":", ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftRandom\/documentation\/SwiftRandom\/PCG32"},{"text":" or ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftRandom\/documentation\/SwiftRandom\/PCG64"},{"text":".","type":"text"}]},{"type":"aside","name":"Important","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"type":"text","text":" "},{"type":"text","text":"SwiftRandom is not suitable for cryptographic applications."}]}],"style":"important"},{"type":"heading","anchor":"Example-1","text":"Example 1","level":3},{"type":"codeListing","code":["import SwiftRandom","","\/\/ Create the BitGenerator to use, f.ex. PCG32 based on initial state = 1234","let pcg32 = PCG32(state: 1234)","","\/\/ Create the RNG instance","let rng = RNG(bg: pcg32)","","\/\/ Create 1000 normal distributed values with mean 2.0 and standard deviation 1.3","var x = [Double](repeating: 0.0, count: 1000)","rng.normalDistribution(mean: 2.0, stdev: 1.3, values: &x)","","\/\/ See the actual mean and standard deviation","print(\"mean:  \", rng.meanValue(of: x))","print(\"stdDev:\", rng.standardDeviation(of: x))"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"giving:"}]},{"type":"codeListing","code":["mean:   1.9523520613523375","stdDev: 1.2654344086187834"],"syntax":"swift"},{"type":"heading","anchor":"Example-2","text":"Example 2","level":3},{"type":"codeListing","code":["import SwiftRandom","","\/\/ Simulate 1000 dice rolls","","let rng = RNG(bg: PCG64())","var counts = [Int](repeating: 0, count: 6)","","for _ in 0 ..< 1000 {","    let dice = rng.randomInt(in: 1 ... 6)","    counts[dice - 1] += 1","}","","print(counts)"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"giving (for example):"}]},{"type":"codeListing","code":["[152, 163, 166, 176, 191, 152]"],"syntax":"swift"},{"type":"heading","anchor":"Usage","text":"Usage","level":3},{"type":"paragraph","inlineContent":[{"type":"text","text":"To use SwiftRandom, in your project Package.swift file add a dependency like"}]},{"type":"codeListing","code":["dependencies: [","  package(url: \"https:\/\/github.com\/leif-ibsen\/SwiftRandom\", from: \"2.1.0\"),","]"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"text":"SwiftRandom itself does not depend on other packages.","type":"text"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"","type":"text"},{"text":" ","type":"text"},{"text":"SwiftRandom requires Swift 6.0. It also requires that the ","type":"text"},{"type":"codeVoice","code":"Int"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"UInt"},{"text":" types be 64 bit types.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"SwiftRandom uses the "},{"type":"codeVoice","code":"Int128"},{"type":"text","text":" and "},{"type":"codeVoice","code":"UInt128"},{"type":"text","text":" types. Therefore, for "},{"type":"codeVoice","code":"macOS"},{"type":"text","text":" the version must be at least 15,"},{"type":"text","text":" "},{"type":"text","text":"for "},{"type":"codeVoice","code":"iOS"},{"type":"text","text":" the version must be at least 18, and for "},{"type":"codeVoice","code":"watchOS"},{"type":"text","text":" the version must be at least 11."}]}],"style":"important","name":"Important","type":"aside"}]}],"topicSections":[{"anchor":"Classes","identifiers":["doc:\/\/SwiftRandom\/documentation\/SwiftRandom\/RNG","doc:\/\/SwiftRandom\/documentation\/SwiftRandom\/MT32","doc:\/\/SwiftRandom\/documentation\/SwiftRandom\/MT64","doc:\/\/SwiftRandom\/documentation\/SwiftRandom\/PCG32","doc:\/\/SwiftRandom\/documentation\/SwiftRandom\/PCG64"],"title":"Classes"},{"anchor":"Protocols","identifiers":["doc:\/\/SwiftRandom\/documentation\/SwiftRandom\/BitGenerator"],"title":"Protocols"},{"anchor":"Type-Aliases","identifiers":["doc:\/\/SwiftRandom\/documentation\/SwiftRandom\/Byte","doc:\/\/SwiftRandom\/documentation\/SwiftRandom\/Bytes"],"title":"Type Aliases"},{"anchor":"Additional-Information","identifiers":["doc:\/\/SwiftRandom\/documentation\/SwiftRandom\/Performance","doc:\/\/SwiftRandom\/documentation\/SwiftRandom\/References"],"title":"Additional Information"}],"kind":"symbol","identifier":{"url":"doc:\/\/SwiftRandom\/documentation\/SwiftRandom","interfaceLanguage":"swift"},"hierarchy":{"paths":[[]]},"schemaVersion":{"patch":0,"major":0,"minor":3},"sections":[],"abstract":[{"text":"Random Number Generation","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftrandom"]}],"metadata":{"role":"collection","modules":[{"name":"SwiftRandom"}],"title":"SwiftRandom","roleHeading":"Framework","externalID":"SwiftRandom","symbolKind":"module"},"references":{"doc://SwiftRandom/documentation/SwiftRandom":{"abstract":[{"type":"text","text":"Random Number Generation"}],"kind":"symbol","identifier":"doc:\/\/SwiftRandom\/documentation\/SwiftRandom","url":"\/documentation\/swiftrandom","title":"SwiftRandom","role":"collection","type":"topic"},"doc://SwiftRandom/documentation/SwiftRandom/BitGenerator":{"identifier":"doc:\/\/SwiftRandom\/documentation\/SwiftRandom\/BitGenerator","type":"topic","abstract":[{"type":"text","text":"The bit generator protocol that the RNG class requires"}],"role":"symbol","url":"\/documentation\/swiftrandom\/bitgenerator","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BitGenerator","kind":"identifier"}],"title":"BitGenerator","kind":"symbol","navigatorTitle":[{"text":"BitGenerator","kind":"identifier"}]},"doc://SwiftRandom/documentation/SwiftRandom/MT32":{"kind":"symbol","type":"topic","identifier":"doc:\/\/SwiftRandom\/documentation\/SwiftRandom\/MT32","url":"\/documentation\/swiftrandom\/mt32","title":"MT32","navigatorTitle":[{"text":"MT32","kind":"identifier"}],"abstract":[{"text":"The 32 bit Mersenne Twister","type":"text"}],"role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"MT32","kind":"identifier"}]},"doc://SwiftRandom/documentation/SwiftRandom/PCG64":{"type":"topic","navigatorTitle":[{"kind":"identifier","text":"PCG64"}],"title":"PCG64","identifier":"doc:\/\/SwiftRandom\/documentation\/SwiftRandom\/PCG64","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"PCG64"}],"kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"The 64 bit Permuted Congruential Generator: PCG-XSL-RR"}],"url":"\/documentation\/swiftrandom\/pcg64"},"doc://SwiftRandom/documentation/SwiftRandom/Byte":{"abstract":[{"text":"Unsigned 8 bit value","type":"text"}],"type":"topic","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Byte","kind":"identifier"}],"title":"Byte","role":"symbol","identifier":"doc:\/\/SwiftRandom\/documentation\/SwiftRandom\/Byte","url":"\/documentation\/swiftrandom\/byte","kind":"symbol","navigatorTitle":[{"text":"Byte","kind":"identifier"}]},"doc://SwiftRandom/documentation/SwiftRandom/PCG32":{"kind":"symbol","identifier":"doc:\/\/SwiftRandom\/documentation\/SwiftRandom\/PCG32","abstract":[{"text":"The 32 bit Permuted Congruential Generator: PCG-XSH-RR","type":"text"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PCG32","kind":"identifier"}],"type":"topic","navigatorTitle":[{"text":"PCG32","kind":"identifier"}],"url":"\/documentation\/swiftrandom\/pcg32","role":"symbol","title":"PCG32"},"doc://SwiftRandom/documentation/SwiftRandom/Performance":{"title":"Performance","role":"article","url":"\/documentation\/swiftrandom\/performance","kind":"article","type":"topic","abstract":[],"identifier":"doc:\/\/SwiftRandom\/documentation\/SwiftRandom\/Performance"},"doc://SwiftRandom/documentation/SwiftRandom/RNG":{"navigatorTitle":[{"text":"RNG","kind":"identifier"}],"abstract":[{"type":"text","text":"The Random Number Generator"}],"kind":"symbol","identifier":"doc:\/\/SwiftRandom\/documentation\/SwiftRandom\/RNG","url":"\/documentation\/swiftrandom\/rng","title":"RNG","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RNG","kind":"identifier"}],"type":"topic"},"doc://SwiftRandom/documentation/SwiftRandom/Bytes":{"title":"Bytes","role":"symbol","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"Bytes"}],"identifier":"doc:\/\/SwiftRandom\/documentation\/SwiftRandom\/Bytes","type":"topic","kind":"symbol","url":"\/documentation\/swiftrandom\/bytes","navigatorTitle":[{"kind":"identifier","text":"Bytes"}],"abstract":[{"type":"text","text":"Array of unsigned 8 bit values"}]},"doc://SwiftRandom/documentation/SwiftRandom/References":{"abstract":[],"url":"\/documentation\/swiftrandom\/references","title":"References","role":"article","identifier":"doc:\/\/SwiftRandom\/documentation\/SwiftRandom\/References","kind":"article","type":"topic"},"doc://SwiftRandom/documentation/SwiftRandom/MT64":{"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MT64","kind":"identifier"}],"identifier":"doc:\/\/SwiftRandom\/documentation\/SwiftRandom\/MT64","abstract":[{"text":"The 64 bit Mersenne Twister","type":"text"}],"role":"symbol","navigatorTitle":[{"text":"MT64","kind":"identifier"}],"kind":"symbol","type":"topic","title":"MT64","url":"\/documentation\/swiftrandom\/mt64"}}}