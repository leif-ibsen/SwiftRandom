{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftrandom"]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"hierarchy":{"paths":[[]]},"sections":[],"kind":"symbol","abstract":[{"text":"Random Number Generation","type":"text"}],"metadata":{"role":"collection","modules":[{"name":"SwiftRandom"}],"title":"SwiftRandom","externalID":"SwiftRandom","symbolKind":"module","roleHeading":"Framework"},"primaryContentSections":[{"content":[{"anchor":"Overview","level":2,"text":"Overview","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The SwiftRandom package generates various types of random numbers using the Mersenne Twister algorithm"},{"type":"text","text":" "},{"type":"text","text":"or the Permuted Congruential Generator algorithm."}]},{"type":"paragraph","inlineContent":[{"text":"It generates the following:","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Random floating point values in a specified open or closed range","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Random integers in a specified open or closed range","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Random unsigned integers in a specified open or closed range","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Random bits"}]}]},{"content":[{"inlineContent":[{"text":"A uniform distribution in a specified open or closed range","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A normal distribution with specified mean and deviation"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"An exponential distribution with specified mean"}],"type":"paragraph"}]}]},{"type":"paragraph","inlineContent":[{"text":"Random number generation uses a ","type":"text"},{"isActive":true,"identifier":"doc:\/\/SwiftRandom\/documentation\/SwiftRandom\/BitGenerator","type":"reference"},{"text":" which is one of ","type":"text"},{"isActive":true,"identifier":"doc:\/\/SwiftRandom\/documentation\/SwiftRandom\/MT32","type":"reference"},{"text":", ","type":"text"},{"isActive":true,"identifier":"doc:\/\/SwiftRandom\/documentation\/SwiftRandom\/MT64","type":"reference"},{"text":", ","type":"text"},{"isActive":true,"identifier":"doc:\/\/SwiftRandom\/documentation\/SwiftRandom\/PCG32","type":"reference"},{"text":" or ","type":"text"},{"isActive":true,"identifier":"doc:\/\/SwiftRandom\/documentation\/SwiftRandom\/PCG64","type":"reference"},{"text":".","type":"text"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"type":"text","text":" "},{"type":"text","text":"SwiftRandom is not suitable for cryptographic applications."}]}],"type":"aside","name":"Important","style":"important"},{"anchor":"Example-1","type":"heading","level":3,"text":"Example 1"},{"type":"codeListing","syntax":"swift","code":["import SwiftRandom","","\/\/ Create the BitGenerator to use, f.ex. PCG32 based on initial state = 1234","let pcg32 = PCG32(state: 1234)","","\/\/ Create the RNG instance","let rng = RNG(bg: pcg32)","","\/\/ Create 20 normal distributed values with mean 2.0 and standard deviation 1.3","var x = [Double](repeating: 0.0, count: 20)","rng.normalDistribution(mean: 2.0, stdev: 1.3, values: &x)","","print(x)"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"giving:"}]},{"type":"codeListing","syntax":"swift","code":["[2.1734545110811996, 1.335732163289224, 0.941024900396149, 3.2264230814632975, 5.459014841733499,","1.800905802727681, 1.8800986950394902, 4.590683327055603, 1.0172035621489117, 2.9474413989338397,","0.6246918556470995, 2.851867736518513, 2.753185266377434, -0.3036907536413542, 2.5184316925825057,","2.8841595259841846, 0.6693799134497671, 1.94079213687274, 1.3378909025908157, 2.564141001379788]"]},{"anchor":"Example-2","type":"heading","level":3,"text":"Example 2"},{"type":"codeListing","syntax":"swift","code":["import SwiftRandom","","\/\/ Simulate 1000 dice rolls","","let rng = RNG(bg: PCG64())","var counts = [Int](repeating: 0, count: 6)","","for _ in 0 ..< 1000 {","    let dice = rng.randomInt(in: 1 ... 6)","    counts[dice - 1] += 1","}","","print(counts)",""]},{"type":"paragraph","inlineContent":[{"text":"giving (for example):","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["[152, 163, 166, 176, 191, 152]"]},{"anchor":"Usage","type":"heading","level":3,"text":"Usage"},{"type":"paragraph","inlineContent":[{"type":"text","text":"To use SwiftRandom, in your project Package.swift file add a dependency like"}]},{"type":"codeListing","syntax":"swift","code":["dependencies: [","  package(url: \"https:\/\/github.com\/leif-ibsen\/SwiftRandom\", from: \"1.1.0\"),","]"]},{"type":"paragraph","inlineContent":[{"text":"SwiftRandom itself does not depend on other packages.","type":"text"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"","type":"text"},{"text":" ","type":"text"},{"text":"SwiftRandom requires Swift 5.0. It also requires that the ","type":"text"},{"code":"Int","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"UInt","type":"codeVoice"},{"text":" types be 64 bit types.","type":"text"}]}],"type":"aside","name":"Important","style":"important"}],"kind":"content"}],"topicSections":[{"identifiers":["doc:\/\/SwiftRandom\/documentation\/SwiftRandom\/RNG","doc:\/\/SwiftRandom\/documentation\/SwiftRandom\/MT32","doc:\/\/SwiftRandom\/documentation\/SwiftRandom\/MT64","doc:\/\/SwiftRandom\/documentation\/SwiftRandom\/PCG32","doc:\/\/SwiftRandom\/documentation\/SwiftRandom\/PCG64"],"anchor":"Classes","title":"Classes"},{"title":"Protocols","anchor":"Protocols","identifiers":["doc:\/\/SwiftRandom\/documentation\/SwiftRandom\/BitGenerator"]},{"title":"Type Aliases","anchor":"Type-Aliases","identifiers":["doc:\/\/SwiftRandom\/documentation\/SwiftRandom\/Byte","doc:\/\/SwiftRandom\/documentation\/SwiftRandom\/Bytes","doc:\/\/SwiftRandom\/documentation\/SwiftRandom\/UInt128"]},{"title":"Additional Information","anchor":"Additional-Information","identifiers":["doc:\/\/SwiftRandom\/documentation\/SwiftRandom\/Performance","doc:\/\/SwiftRandom\/documentation\/SwiftRandom\/References"]}],"identifier":{"url":"doc:\/\/SwiftRandom\/documentation\/SwiftRandom","interfaceLanguage":"swift"},"references":{"doc://SwiftRandom/documentation/SwiftRandom/BitGenerator":{"abstract":[{"type":"text","text":"The bit generator protocol that the RNG class requires"}],"type":"topic","url":"\/documentation\/swiftrandom\/bitgenerator","title":"BitGenerator","navigatorTitle":[{"kind":"identifier","text":"BitGenerator"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"BitGenerator"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/SwiftRandom\/documentation\/SwiftRandom\/BitGenerator"},"doc://SwiftRandom/documentation/SwiftRandom/PCG32":{"identifier":"doc:\/\/SwiftRandom\/documentation\/SwiftRandom\/PCG32","url":"\/documentation\/swiftrandom\/pcg32","kind":"symbol","role":"symbol","title":"PCG32","navigatorTitle":[{"kind":"identifier","text":"PCG32"}],"abstract":[{"type":"text","text":"The 32 bit Permuted Congruential Generator: PCG-XSH-RR"}],"type":"topic","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"PCG32"}]},"doc://SwiftRandom/documentation/SwiftRandom/RNG":{"abstract":[{"type":"text","text":"The Random Number Generator"}],"identifier":"doc:\/\/SwiftRandom\/documentation\/SwiftRandom\/RNG","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"RNG"}],"navigatorTitle":[{"kind":"identifier","text":"RNG"}],"title":"RNG","type":"topic","url":"\/documentation\/swiftrandom\/rng","kind":"symbol","role":"symbol"},"doc://SwiftRandom/documentation/SwiftRandom/Bytes":{"kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"Array of unsigned 8 bit values"}],"fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Bytes","kind":"identifier"}],"navigatorTitle":[{"text":"Bytes","kind":"identifier"}],"url":"\/documentation\/swiftrandom\/bytes","identifier":"doc:\/\/SwiftRandom\/documentation\/SwiftRandom\/Bytes","type":"topic","title":"Bytes"},"doc://SwiftRandom/documentation/SwiftRandom/Byte":{"role":"symbol","type":"topic","abstract":[{"text":"Unsigned 8 bit value","type":"text"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"Byte"}],"identifier":"doc:\/\/SwiftRandom\/documentation\/SwiftRandom\/Byte","title":"Byte","url":"\/documentation\/swiftrandom\/byte","navigatorTitle":[{"kind":"identifier","text":"Byte"}]},"doc://SwiftRandom/documentation/SwiftRandom/MT64":{"abstract":[{"type":"text","text":"The 64 bit Mersenne Twister"}],"navigatorTitle":[{"kind":"identifier","text":"MT64"}],"url":"\/documentation\/swiftrandom\/mt64","role":"symbol","type":"topic","identifier":"doc:\/\/SwiftRandom\/documentation\/SwiftRandom\/MT64","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"MT64"}],"kind":"symbol","title":"MT64"},"doc://SwiftRandom/documentation/SwiftRandom/MT32":{"title":"MT32","abstract":[{"type":"text","text":"The 32 bit Mersenne Twister"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"MT32"}],"url":"\/documentation\/swiftrandom\/mt32","navigatorTitle":[{"kind":"identifier","text":"MT32"}],"type":"topic","identifier":"doc:\/\/SwiftRandom\/documentation\/SwiftRandom\/MT32","role":"symbol"},"doc://SwiftRandom/documentation/SwiftRandom/UInt128":{"title":"UInt128","type":"topic","identifier":"doc:\/\/SwiftRandom\/documentation\/SwiftRandom\/UInt128","navigatorTitle":[{"text":"UInt128","kind":"identifier"}],"kind":"symbol","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"UInt128","kind":"identifier"}],"role":"symbol","url":"\/documentation\/swiftrandom\/uint128","abstract":[{"text":"128 bit unsigned integer","type":"text"}]},"doc://SwiftRandom/documentation/SwiftRandom/References":{"role":"article","title":"References","identifier":"doc:\/\/SwiftRandom\/documentation\/SwiftRandom\/References","kind":"article","url":"\/documentation\/swiftrandom\/references","type":"topic","abstract":[]},"doc://SwiftRandom/documentation/SwiftRandom/PCG64":{"url":"\/documentation\/swiftrandom\/pcg64","type":"topic","abstract":[{"type":"text","text":"The 64 bit Permuted Congruential Generator: PCG-XSL-RR"}],"identifier":"doc:\/\/SwiftRandom\/documentation\/SwiftRandom\/PCG64","kind":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"PCG64"}],"title":"PCG64","navigatorTitle":[{"kind":"identifier","text":"PCG64"}],"role":"symbol"},"doc://SwiftRandom/documentation/SwiftRandom/Performance":{"type":"topic","kind":"article","role":"article","url":"\/documentation\/swiftrandom\/performance","title":"Performance","abstract":[],"identifier":"doc:\/\/SwiftRandom\/documentation\/SwiftRandom\/Performance"},"doc://SwiftRandom/documentation/SwiftRandom":{"url":"\/documentation\/swiftrandom","abstract":[{"type":"text","text":"Random Number Generation"}],"identifier":"doc:\/\/SwiftRandom\/documentation\/SwiftRandom","role":"collection","type":"topic","title":"SwiftRandom","kind":"symbol"}}}