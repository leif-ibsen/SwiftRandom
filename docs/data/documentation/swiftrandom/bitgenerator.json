{"kind":"symbol","metadata":{"roleHeading":"Protocol","symbolKind":"protocol","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"BitGenerator","kind":"identifier"}],"navigatorTitle":[{"text":"BitGenerator","kind":"identifier"}],"externalID":"s:11SwiftRandom12BitGeneratorP","modules":[{"name":"SwiftRandom"}],"title":"BitGenerator"},"variants":[{"paths":["\/documentation\/swiftrandom\/bitgenerator"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"text":"The bit generator protocol that the RNG class requires","type":"text"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SwiftRandom\/documentation\/SwiftRandom\/BitGenerator"},"sections":[],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"BitGenerator"}],"platforms":["macOS"]}],"kind":"declarations"},{"kind":"content","content":[{"text":"Overview","anchor":"Overview","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"text":"The bit generators that implement this protocol are deterministic.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Their sequence of generated values depends only on the seed they were instantiated with."}]}]}],"hierarchy":{"paths":[["doc:\/\/SwiftRandom\/documentation\/SwiftRandom"]]},"relationshipsSections":[{"kind":"relationships","type":"conformingTypes","title":"Conforming Types","identifiers":["doc:\/\/SwiftRandom\/documentation\/SwiftRandom\/MT32","doc:\/\/SwiftRandom\/documentation\/SwiftRandom\/MT64","doc:\/\/SwiftRandom\/documentation\/SwiftRandom\/PCG32","doc:\/\/SwiftRandom\/documentation\/SwiftRandom\/PCG64"]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"topicSections":[{"anchor":"Methods","identifiers":["doc:\/\/SwiftRandom\/documentation\/SwiftRandom\/BitGenerator\/nextUInt32()","doc:\/\/SwiftRandom\/documentation\/SwiftRandom\/BitGenerator\/nextUInt64()","doc:\/\/SwiftRandom\/documentation\/SwiftRandom\/BitGenerator\/nextDouble(open:)","doc:\/\/SwiftRandom\/documentation\/SwiftRandom\/BitGenerator\/getState()","doc:\/\/SwiftRandom\/documentation\/SwiftRandom\/BitGenerator\/setState(state:)"],"title":"Methods"}],"references":{"doc://SwiftRandom/documentation/SwiftRandom/BitGenerator/nextDouble(open:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"nextDouble","kind":"identifier"},{"kind":"text","text":"("},{"text":"open","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:Sd","text":"Double","kind":"typeIdentifier"}],"role":"symbol","title":"nextDouble(open:)","url":"\/documentation\/swiftrandom\/bitgenerator\/nextdouble(open:)","kind":"symbol","identifier":"doc:\/\/SwiftRandom\/documentation\/SwiftRandom\/BitGenerator\/nextDouble(open:)","required":true,"type":"topic","abstract":[{"type":"text","text":"Generate a random floating point value in either 0.0 ..< 1.0 or 0.0 â€¦ 1.0"}]},"doc://SwiftRandom/documentation/SwiftRandom/MT32":{"navigatorTitle":[{"text":"MT32","kind":"identifier"}],"type":"topic","title":"MT32","abstract":[{"type":"text","text":"The 32 bit Mersenne Twister"}],"role":"symbol","identifier":"doc:\/\/SwiftRandom\/documentation\/SwiftRandom\/MT32","url":"\/documentation\/swiftrandom\/mt32","kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"MT32"}]},"doc://SwiftRandom/documentation/SwiftRandom/MT64":{"kind":"symbol","title":"MT64","abstract":[{"text":"The 64 bit Mersenne Twister","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"MT64"}],"identifier":"doc:\/\/SwiftRandom\/documentation\/SwiftRandom\/MT64","url":"\/documentation\/swiftrandom\/mt64","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MT64","kind":"identifier"}],"role":"symbol","type":"topic"},"doc://SwiftRandom/documentation/SwiftRandom/BitGenerator":{"kind":"symbol","title":"BitGenerator","abstract":[{"text":"The bit generator protocol that the RNG class requires","type":"text"}],"navigatorTitle":[{"text":"BitGenerator","kind":"identifier"}],"identifier":"doc:\/\/SwiftRandom\/documentation\/SwiftRandom\/BitGenerator","url":"\/documentation\/swiftrandom\/bitgenerator","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BitGenerator","kind":"identifier"}],"role":"symbol","type":"topic"},"doc://SwiftRandom/documentation/SwiftRandom/BitGenerator/nextUInt64()":{"required":true,"identifier":"doc:\/\/SwiftRandom\/documentation\/SwiftRandom\/BitGenerator\/nextUInt64()","kind":"symbol","title":"nextUInt64()","abstract":[{"type":"text","text":"Generate a random 64 bit unsigned integer"}],"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"nextUInt64","kind":"identifier"},{"kind":"text","text":"() -> "},{"preciseIdentifier":"s:s6UInt64V","text":"UInt64","kind":"typeIdentifier"}],"role":"symbol","url":"\/documentation\/swiftrandom\/bitgenerator\/nextuint64()"},"doc://SwiftRandom/documentation/SwiftRandom":{"title":"SwiftRandom","role":"collection","kind":"symbol","type":"topic","url":"\/documentation\/swiftrandom","identifier":"doc:\/\/SwiftRandom\/documentation\/SwiftRandom","abstract":[{"text":"Random Number Generation","type":"text"}]},"doc://SwiftRandom/documentation/SwiftRandom/BitGenerator/nextUInt32()":{"required":true,"kind":"symbol","role":"symbol","abstract":[{"text":"Generate a random 32 bit unsigned integer","type":"text"}],"identifier":"doc:\/\/SwiftRandom\/documentation\/SwiftRandom\/BitGenerator\/nextUInt32()","url":"\/documentation\/swiftrandom\/bitgenerator\/nextuint32()","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"nextUInt32","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"UInt32","preciseIdentifier":"s:s6UInt32V","kind":"typeIdentifier"}],"title":"nextUInt32()"},"doc://SwiftRandom/documentation/SwiftRandom/BitGenerator/getState()":{"abstract":[{"type":"text","text":"Retrieve the internal generator state"}],"title":"getState()","type":"topic","role":"symbol","identifier":"doc:\/\/SwiftRandom\/documentation\/SwiftRandom\/BitGenerator\/getState()","kind":"symbol","url":"\/documentation\/swiftrandom\/bitgenerator\/getstate()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"getState","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"Bytes","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftRandom5Bytesa"}],"required":true},"doc://SwiftRandom/documentation/SwiftRandom/BitGenerator/setState(state:)":{"required":true,"kind":"symbol","role":"symbol","abstract":[{"text":"Reinstate the internal generator state","type":"text"}],"identifier":"doc:\/\/SwiftRandom\/documentation\/SwiftRandom\/BitGenerator\/setState(state:)","url":"\/documentation\/swiftrandom\/bitgenerator\/setstate(state:)","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"setState","kind":"identifier"},{"text":"(","kind":"text"},{"text":"state","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftRandom5Bytesa","text":"Bytes"},{"text":")","kind":"text"}],"title":"setState(state:)"},"doc://SwiftRandom/documentation/SwiftRandom/PCG32":{"type":"topic","kind":"symbol","identifier":"doc:\/\/SwiftRandom\/documentation\/SwiftRandom\/PCG32","title":"PCG32","url":"\/documentation\/swiftrandom\/pcg32","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"PCG32","kind":"identifier"}],"abstract":[{"text":"The 32 bit Permuted Congruential Generator: PCG-XSH-RR","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"PCG32"}],"role":"symbol"},"doc://SwiftRandom/documentation/SwiftRandom/PCG64":{"navigatorTitle":[{"text":"PCG64","kind":"identifier"}],"kind":"symbol","title":"PCG64","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"PCG64","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"The 64 bit Permuted Congruential Generator: PCG-XSL-RR"}],"url":"\/documentation\/swiftrandom\/pcg64","identifier":"doc:\/\/SwiftRandom\/documentation\/SwiftRandom\/PCG64"}}}