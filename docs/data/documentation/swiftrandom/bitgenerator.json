{"identifier":{"url":"doc:\/\/SwiftRandom\/documentation\/SwiftRandom\/BitGenerator","interfaceLanguage":"swift"},"variants":[{"paths":["\/documentation\/swiftrandom\/bitgenerator"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BitGenerator","kind":"identifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:SG","text":"RandomNumberGenerator","kind":"typeIdentifier"}],"platforms":["macOS"]}]},{"kind":"content","content":[{"type":"heading","anchor":"Overview","level":2,"text":"Overview"},{"type":"paragraph","inlineContent":[{"text":"The BitGenerator protocol inherits from the RandomNumberGenerator protocol.","type":"text"},{"text":" ","type":"text"},{"text":"A BitGenerator instance can thus be used when a RandomNumberGenerator instance is required.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"The bit generators that implement this protocol are deterministic.","type":"text"},{"text":" ","type":"text"},{"text":"Their sequence of generated values depends only on the seed they were instantiated with.","type":"text"}]}]}],"metadata":{"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"BitGenerator"}],"navigatorTitle":[{"kind":"identifier","text":"BitGenerator"}],"externalID":"s:11SwiftRandom12BitGeneratorP","roleHeading":"Protocol","role":"symbol","symbolKind":"protocol","modules":[{"name":"SwiftRandom"}],"title":"BitGenerator"},"topicSections":[{"title":"Methods","anchor":"Methods","identifiers":["doc:\/\/SwiftRandom\/documentation\/SwiftRandom\/BitGenerator\/nextUInt32()","doc:\/\/SwiftRandom\/documentation\/SwiftRandom\/BitGenerator\/nextUInt64()","doc:\/\/SwiftRandom\/documentation\/SwiftRandom\/BitGenerator\/nextUInt128()","doc:\/\/SwiftRandom\/documentation\/SwiftRandom\/BitGenerator\/nextBit()","doc:\/\/SwiftRandom\/documentation\/SwiftRandom\/BitGenerator\/getState()","doc:\/\/SwiftRandom\/documentation\/SwiftRandom\/BitGenerator\/setState(state:)"]},{"generated":true,"title":"Instance Properties","anchor":"Instance-Properties","identifiers":["doc:\/\/SwiftRandom\/documentation\/SwiftRandom\/BitGenerator\/description"]}],"relationshipsSections":[{"kind":"relationships","title":"Inherits From","identifiers":["doc:\/\/SwiftRandom\/SG"],"type":"inheritsFrom"},{"kind":"relationships","title":"Conforming Types","identifiers":["doc:\/\/SwiftRandom\/documentation\/SwiftRandom\/MT32","doc:\/\/SwiftRandom\/documentation\/SwiftRandom\/MT64","doc:\/\/SwiftRandom\/documentation\/SwiftRandom\/PCG32","doc:\/\/SwiftRandom\/documentation\/SwiftRandom\/PCG64"],"type":"conformingTypes"}],"kind":"symbol","schemaVersion":{"major":0,"patch":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/SwiftRandom\/documentation\/SwiftRandom"]]},"sections":[],"abstract":[{"text":"The bit generator protocol that the RNG structure requires","type":"text"}],"references":{"doc://SwiftRandom/documentation/SwiftRandom/BitGenerator/nextUInt64()":{"abstract":[{"text":"Generate a random 64 bit unsigned integer","type":"text"}],"url":"\/documentation\/swiftrandom\/bitgenerator\/nextuint64()","type":"topic","required":true,"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"nextUInt64","kind":"identifier"},{"text":"() -> ","kind":"text"},{"preciseIdentifier":"s:s6UInt64V","text":"UInt64","kind":"typeIdentifier"}],"title":"nextUInt64()","kind":"symbol","identifier":"doc:\/\/SwiftRandom\/documentation\/SwiftRandom\/BitGenerator\/nextUInt64()","role":"symbol"},"doc://SwiftRandom/documentation/SwiftRandom/MT32":{"identifier":"doc:\/\/SwiftRandom\/documentation\/SwiftRandom\/MT32","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"MT32"}],"role":"symbol","url":"\/documentation\/swiftrandom\/mt32","abstract":[{"text":"32 bit Mersenne Twister mt19937","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"MT32"}],"kind":"symbol","type":"topic","title":"MT32"},"doc://SwiftRandom/documentation/SwiftRandom/BitGenerator/nextUInt32()":{"title":"nextUInt32()","abstract":[{"type":"text","text":"Generate a random 32 bit unsigned integer"}],"kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"nextUInt32","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"UInt32","kind":"typeIdentifier","preciseIdentifier":"s:s6UInt32V"}],"identifier":"doc:\/\/SwiftRandom\/documentation\/SwiftRandom\/BitGenerator\/nextUInt32()","type":"topic","required":true,"url":"\/documentation\/swiftrandom\/bitgenerator\/nextuint32()","role":"symbol"},"doc://SwiftRandom/documentation/SwiftRandom/BitGenerator/setState(state:)":{"kind":"symbol","role":"symbol","title":"setState(state:)","abstract":[{"text":"Reinstate the internal generator state","type":"text"}],"url":"\/documentation\/swiftrandom\/bitgenerator\/setstate(state:)","required":true,"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"setState","kind":"identifier"},{"text":"(","kind":"text"},{"text":"state","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftRandom5Bytesa","text":"Bytes","kind":"typeIdentifier"},{"text":")","kind":"text"}],"identifier":"doc:\/\/SwiftRandom\/documentation\/SwiftRandom\/BitGenerator\/setState(state:)","type":"topic"},"doc://SwiftRandom/documentation/SwiftRandom/BitGenerator/nextUInt128()":{"title":"nextUInt128()","type":"topic","url":"\/documentation\/swiftrandom\/bitgenerator\/nextuint128()","kind":"symbol","identifier":"doc:\/\/SwiftRandom\/documentation\/SwiftRandom\/BitGenerator\/nextUInt128()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"nextUInt128","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"UInt128","kind":"typeIdentifier","preciseIdentifier":"s:s7UInt128V"}],"role":"symbol","abstract":[{"type":"text","text":"Generate a random 128 bit unsigned integer"}],"required":true},"doc://SwiftRandom/documentation/SwiftRandom":{"title":"SwiftRandom","kind":"symbol","abstract":[{"text":"Random Number Generation","type":"text"}],"role":"collection","url":"\/documentation\/swiftrandom","type":"topic","identifier":"doc:\/\/SwiftRandom\/documentation\/SwiftRandom"},"doc://SwiftRandom/SG":{"identifier":"doc:\/\/SwiftRandom\/SG","title":"Swift.RandomNumberGenerator","type":"unresolvable"},"doc://SwiftRandom/documentation/SwiftRandom/BitGenerator/description":{"kind":"symbol","title":"description","required":true,"role":"symbol","identifier":"doc:\/\/SwiftRandom\/documentation\/SwiftRandom\/BitGenerator\/description","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"description"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"}],"abstract":[{"text":"Description of ","type":"text"},{"code":"self","type":"codeVoice"}],"type":"topic","url":"\/documentation\/swiftrandom\/bitgenerator\/description"},"doc://SwiftRandom/documentation/SwiftRandom/BitGenerator/nextBit()":{"type":"topic","kind":"symbol","required":true,"url":"\/documentation\/swiftrandom\/bitgenerator\/nextbit()","title":"nextBit()","role":"symbol","identifier":"doc:\/\/SwiftRandom\/documentation\/SwiftRandom\/BitGenerator\/nextBit()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"nextBit","kind":"identifier"},{"text":"() -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"Generate a random bit"}]},"doc://SwiftRandom/documentation/SwiftRandom/PCG64":{"url":"\/documentation\/swiftrandom\/pcg64","abstract":[{"type":"text","text":"64 bit Permuted Congruential Generator: PCG-XSL-RR"}],"role":"symbol","identifier":"doc:\/\/SwiftRandom\/documentation\/SwiftRandom\/PCG64","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"PCG64"}],"navigatorTitle":[{"kind":"identifier","text":"PCG64"}],"title":"PCG64","type":"topic"},"doc://SwiftRandom/documentation/SwiftRandom/PCG32":{"navigatorTitle":[{"kind":"identifier","text":"PCG32"}],"title":"PCG32","abstract":[{"text":"32 bit Permuted Congruential Generator: PCG-XSH-RR","type":"text"}],"role":"symbol","identifier":"doc:\/\/SwiftRandom\/documentation\/SwiftRandom\/PCG32","type":"topic","url":"\/documentation\/swiftrandom\/pcg32","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"PCG32"}]},"doc://SwiftRandom/documentation/SwiftRandom/MT64":{"title":"MT64","identifier":"doc:\/\/SwiftRandom\/documentation\/SwiftRandom\/MT64","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MT64","kind":"identifier"}],"abstract":[{"type":"text","text":"64 bit Mersenne Twister mt19937"}],"url":"\/documentation\/swiftrandom\/mt64","type":"topic","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"MT64"}]},"doc://SwiftRandom/documentation/SwiftRandom/BitGenerator":{"abstract":[{"text":"The bit generator protocol that the RNG structure requires","type":"text"}],"kind":"symbol","role":"symbol","navigatorTitle":[{"text":"BitGenerator","kind":"identifier"}],"title":"BitGenerator","identifier":"doc:\/\/SwiftRandom\/documentation\/SwiftRandom\/BitGenerator","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BitGenerator","kind":"identifier"}],"url":"\/documentation\/swiftrandom\/bitgenerator"},"doc://SwiftRandom/documentation/SwiftRandom/BitGenerator/getState()":{"identifier":"doc:\/\/SwiftRandom\/documentation\/SwiftRandom\/BitGenerator\/getState()","role":"symbol","title":"getState()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getState"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftRandom5Bytesa","text":"Bytes"}],"kind":"symbol","abstract":[{"type":"text","text":"Retrieve the internal generator state"}],"url":"\/documentation\/swiftrandom\/bitgenerator\/getstate()","type":"topic","required":true}}}